name: Build

on:
  pull_request:
    branches: [master, main]
  push:
    branches: ["*"]
    tags: ["*"]
  workflow_dispatch:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write # for uploading release artifacts

jobs:
  linux_nix:
    uses: SpiralP/github-reusable-workflows/.github/workflows/build.yml@025ee7ed2caeff09d6b2a99d8d9f6e3eeaca8e29 # main

  windows:
    name: Build Windows ${{ matrix.config.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, bits: 64, target: x86_64-pc-windows-msvc }
          - { arch: i686, bits: 32, target: i686-pc-windows-msvc }

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@6fb02220983dee41ce7ae257b6f4d8f9bf5ed4ce # v2

      - name: Install rust
        run: |
          rustup default stable
          rustup component add rustfmt
          rustup target add ${{ matrix.config.target }}

      - name: Build
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo build --target ${{ matrix.config.target }}

      - name: Test
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo test --target ${{ matrix.config.target }} -- --nocapture --test-threads 1
          Move-Item `
            -Path 'target\${{ matrix.config.target }}\debug\classicube_chatsounds_plugin.dll' `
            -Destination '.\classicube_chatsounds_windows_${{ matrix.config.arch }}.dll'

      - name: Build Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cargo build --target ${{ matrix.config.target }} --release
          Move-Item `
            -Path 'target\${{ matrix.config.target }}\release\classicube_chatsounds_plugin.dll' `
            -Destination '.\classicube_chatsounds_windows_${{ matrix.config.arch }}.dll'

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v4
        with:
          name: classicube_chatsounds_windows_${{ matrix.config.arch }}
          path: classicube_chatsounds_windows_${{ matrix.config.arch }}.dll

      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@d34968c958ae283fe976efed637081b9f9dcf74f # v4
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: |
            classicube_chatsounds_windows_${{ matrix.config.arch }}.dll

      - name: Upload Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            classicube_chatsounds_windows_${{ matrix.config.arch }}.dll

  linux:
    name: Build Linux ${{ matrix.config.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, target: x86_64-unknown-linux-gnu }
          # - { arch: i686, target: i686-unknown-linux-gnu }

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install deps
        run: |
          sudo apt-get -y update
          sudo apt-get -y install clang llvm
          sudo apt-get -y install mesa-common-dev libopenal-dev libcurl4-openssl-dev libgl1-mesa-dev
          sudo apt-get -y install libasound2-dev libpango1.0-dev libatk1.0-dev libgtk-3-dev libssl-dev openssl

      - name: Install rust
        run: |
          rustup default stable
          rustup component add rustfmt
          rustup target add ${{ matrix.config.target }}

      - name: Build
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo build --target ${{ matrix.config.target }}
          file 'target/${{ matrix.config.target }}/debug/libclassicube_chatsounds_plugin.so'

      - name: Test
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo test --target ${{ matrix.config.target }} -- --nocapture --test-threads 1
          mv 'target/${{ matrix.config.target }}/debug/libclassicube_chatsounds_plugin.so' \
            './classicube_chatsounds_linux_${{ matrix.config.arch }}.so'

      - name: Build Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cargo build --target ${{ matrix.config.target }} --release
          file 'target/${{ matrix.config.target }}/release/libclassicube_chatsounds_plugin.so'
          mv 'target/${{ matrix.config.target }}/release/libclassicube_chatsounds_plugin.so' \
            './classicube_chatsounds_linux_${{ matrix.config.arch }}.so'

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v4
        with:
          name: classicube_chatsounds_linux_${{ matrix.config.arch }}
          path: classicube_chatsounds_linux_${{ matrix.config.arch }}.so

      - name: Upload Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            classicube_chatsounds_linux_${{ matrix.config.arch }}.so

  mac:
    name: Build MacOS ${{ matrix.config.arch }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, target: x86_64-apple-darwin }

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install deps
        run: |
          brew install llvm
          echo "/usr/local/opt/llvm/bin" >> $GITHUB_PATH

      - name: Install rust
        run: |
          rustup default stable
          rustup component add rustfmt
          rustup target add ${{ matrix.config.target }}

      - name: Build
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo build --target ${{ matrix.config.target }}
          file 'target/${{ matrix.config.target }}/debug/libclassicube_chatsounds_plugin.dylib'

      - name: Test
        if: ${{ startsWith(github.ref, 'refs/tags/') != true }}
        run: |
          cargo test --target ${{ matrix.config.target }} -- --nocapture --test-threads 1
          mv 'target/${{ matrix.config.target }}/debug/libclassicube_chatsounds_plugin.dylib' \
            './classicube_chatsounds_macos_${{ matrix.config.arch }}.dylib'

      - name: Build Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          cargo build --target ${{ matrix.config.target }} --release
          file 'target/${{ matrix.config.target }}/release/libclassicube_chatsounds_plugin.dylib'
          mv 'target/${{ matrix.config.target }}/release/libclassicube_chatsounds_plugin.dylib' \
            './classicube_chatsounds_macos_${{ matrix.config.arch }}.dylib'

      - uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v4
        with:
          name: classicube_chatsounds_macos_${{ matrix.config.arch }}
          path: classicube_chatsounds_macos_${{ matrix.config.arch }}.dylib

      - name: Upload Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            classicube_chatsounds_macos_${{ matrix.config.arch }}.dylib
